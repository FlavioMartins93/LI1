<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe</td></tr></table><p class="caption">Main</p></div><div id="description"><p class="caption">Description</p><div class="doc"><p>O objectivo desta tarefa &#233;, dada uma descri&#231;&#227;o do estado do jogo e um comando de um dos
jogadores, determinar o efeito desse comando no estado do jogo. Cada jogador &#233; identificado
por um d&#237;gito entre 0 e 3 e os comandos podem ser os caracteres &#8216;U&#8217; (ir para cima), &#8216;D&#8217; (ir
para baixo), &#8216;L&#8217; (ir para a esquerda), &#8216;R&#8217; (ir para a direita) e &#8216;B&#8217; (colocar uma bomba).</p><p>O estado do jogo &#233; representado usando o formato descrito na tarefa anterior, mais uma linha a
descrever o estado de cada bomba colocada no mapa, e uma linha a descrever o estado de
cada jogador. Uma bomba &#233; identificada pelo caracter &#8216;*&#8217; sendo listada depois a sua posi&#231;&#227;o,
qual o jogador que a colocou, qual o seu raio de ac&#231;&#227;o e quantos instantes de tempo faltam
para explodir. Um jogador &#233; identificado pelo seu d&#237;gito sendo listada depois a sua posi&#231;&#227;o e os
power ups que entretanto acumulou. O jogo suporta um m&#225;ximo de 4 jogadores. Bombas e
jogadores devem aparecer ordenados por posi&#231;&#227;o e identificador, respectivamente.</p><p>Sempre que um comando n&#227;o possa ser executado o resultado dever&#225; ser o mesmo estado.
Note que na mesma c&#233;lula podem coexistir mais do que um jogador e um jogador pode
tamb&#233;m estar posicionado numa c&#233;lula onde se encontra uma bomba. No entanto, na mesma
c&#233;lula n&#227;o pode estar mais do que uma bomba. </p><p>Para realizar esta tarefa decidimos dividir o input em 5 partes de forma a facilitar o seu processamento,
sendo estas 5 partes as seguintes:</p><ul><li>grelha de jogo</li><li>powerUPs bomba</li><li>powerUPs flames</li><li>bombas colocadas</li><li>jogadores</li></ul></div></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:move">move</a> :: [String] -&gt; Int -&gt; Char -&gt; [String]</li><li class="src short"><a href="#v:grelha">grelha</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:bombas">bombas</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:flames">flames</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:bombacol">bombacol</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:jogadores">jogadores</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:jogador">jogador</a> :: Char -&gt; [String] -&gt; String</li><li class="src short"><a href="#v:tupler">tupler</a> :: String -&gt; (Int, Int)</li><li class="src short"><a href="#v:tuplesdados">tuplesdados</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:verposibomba">verposibomba</a> :: String -&gt; [String] -&gt; Bool</li><li class="src short"><a href="#v:verjogcolbom">verjogcolbom</a> :: Int -&gt; [String] -&gt; Int</li><li class="src short"><a href="#v:criarbomba">criarbomba</a> :: (Int, Int) -&gt; Int -&gt; Int -&gt; Int -&gt; String</li><li class="src short"><a href="#v:inserirbomba">inserirbomba</a> :: String -&gt; [String] -&gt; [String]</li><li class="src short"><a href="#v:maiortuple">maiortuple</a> :: (Int, Int) -&gt; (Int, Int) -&gt; (Int, Int)</li><li class="src short"><a href="#v:verposigrelha">verposigrelha</a> :: [String] -&gt; (Int, Int) -&gt; (Int, Int) -&gt; Bool</li><li class="src short"><a href="#v:verPU">verPU</a> :: String -&gt; [String] -&gt; Bool</li><li class="src short"><a href="#v:addPU">addPU</a> :: String -&gt; [String] -&gt; String</li><li class="src short"><a href="#v:remPU">remPU</a> :: String -&gt; [String] -&gt; [String]</li><li class="src short"><a href="#v:moverJogador">moverJogador</a> :: String -&gt; (Int, Int) -&gt; String</li><li class="src short"><a href="#v:removerjogadormovido">removerjogadormovido</a> :: Int -&gt; [String] -&gt; [String]</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p></div><div class="top"><p class="src"><a name="v:move" class="def">move</a> :: [String] -&gt; Int -&gt; Char -&gt; [String]</p><div class="doc"><p>A principal fun&#231;&#227;o do nosso mapa, esta fun&#231;&#227;o 
para os comandos <code>D</code>,<code>U</code>,<code>L</code>,<code>R</code> verifica se a posi&#231;&#227;o para a qual o jogador se ir&#225; mover est&#225; livre,
e caso esteja ocupada retorna o input recebido, caso esteja livre move o jogador nessa direc&#231;&#227;o e
verifica se na posi&#231;&#227;o destino existe algum power up e, caso exista adiciona-o ao jogador,
para o comando <code>B</code> verifica se a posi&#231;&#227;o onde est&#225; o jogador n&#227;o tem nenhuma bomba colocada, 
compara-se o numero de bombas j&#225; colocadas pelo jogador com o numero de powerUps bomba que o jogador tem e, 
caso o jogador possa colocar a bomba, coloca a bomba, caso contr&#225;rio devolve o input recebido.</p></div></div><div class="top"><p class="src"><a name="v:grelha" class="def">grelha</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que recebe o input e devolve apenas a grelha de jogo </p></div></div><div class="top"><p class="src"><a name="v:bombas" class="def">bombas</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que recebe o input e devolve a lista de bombas </p></div></div><div class="top"><p class="src"><a name="v:flames" class="def">flames</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que recebe o input e devolve a lista de flames </p></div></div><div class="top"><p class="src"><a name="v:bombacol" class="def">bombacol</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que recebe o input e devolve a lista das bombas colocadas </p></div></div><div class="top"><p class="src"><a name="v:jogadores" class="def">jogadores</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que recebe o input e devolve a lista jogadores </p></div></div><div class="top"><p class="src"><a name="v:jogador" class="def">jogador</a> :: Char -&gt; [String] -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que pega na lista de jogadores e devolve apenas um jogador </p></div></div><div class="top"><p class="src"><a name="v:tupler" class="def">tupler</a> :: String -&gt; (Int, Int)</p><div class="doc"><p>Fun&#231;&#227;o para adquirir a posicao no mapa de um PowerUP, jogador ou um bomba colocada </p></div></div><div class="top"><p class="src"><a name="v:tuplesdados" class="def">tuplesdados</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Fun&#231;&#227;o que utilizamos para transformar a lista de bombas ou flames na lista das suas coordenadas </p></div></div><div class="top"><p class="src"><a name="v:verposibomba" class="def">verposibomba</a> :: String -&gt; [String] -&gt; Bool</p><div class="doc"><p>Fun&#231;&#227;o que verifica se existe alguma bomba na posicao do jogador </p></div></div><div class="top"><p class="src"><a name="v:verjogcolbom" class="def">verjogcolbom</a> :: Int -&gt; [String] -&gt; Int</p><div class="doc"><p>Fun&#231;&#227;o que conta quantas bombas um jogador j&#225; tem colocadas no mapa </p></div></div><div class="top"><p class="src"><a name="v:criarbomba" class="def">criarbomba</a> :: (Int, Int) -&gt; Int -&gt; Int -&gt; Int -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que cria a nova string de uma bomba acabada de colocar </p></div></div><div class="top"><p class="src"><a name="v:inserirbomba" class="def">inserirbomba</a> :: String -&gt; [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que insere a string de uma bomba acabada de colocar na nossa lista de bombas </p></div></div><div class="top"><p class="src"><a name="v:maiortuple" class="def">maiortuple</a> :: (Int, Int) -&gt; (Int, Int) -&gt; (Int, Int)</p><div class="doc"><p>Fun&#231;&#227;o que copara dois tuples do tipo (coluna,linha) e devolve o maior </p></div></div><div class="top"><p class="src"><a name="v:verposigrelha" class="def">verposigrelha</a> :: [String] -&gt; (Int, Int) -&gt; (Int, Int) -&gt; Bool</p><div class="doc"><p>Fun&#231;&#227;o que verifica se uma determinada posicao da grelha esta ocupada por alguma parede ou tijolo </p></div></div><div class="top"><p class="src"><a name="v:verPU" class="def">verPU</a> :: String -&gt; [String] -&gt; Bool</p><div class="doc"><p>Fun&#231;&#227;o que verifica se na posi&#231;&#227;o destino do jogador existe algum PU </p></div></div><div class="top"><p class="src"><a name="v:addPU" class="def">addPU</a> :: String -&gt; [String] -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que adiciona power up a um jogador </p></div></div><div class="top"><p class="src"><a name="v:remPU" class="def">remPU</a> :: String -&gt; [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que remove power up dada a um jogador </p></div></div><div class="top"><p class="src"><a name="v:moverJogador" class="def">moverJogador</a> :: String -&gt; (Int, Int) -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que move o jogadaor na dire&#231;ao do comando </p></div></div><div class="top"><p class="src"><a name="v:removerjogadormovido" class="def">removerjogadormovido</a> :: Int -&gt; [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que remove o jogador movido da lista de jogadores inicial </p></div></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.16.1</p></div></body></html>